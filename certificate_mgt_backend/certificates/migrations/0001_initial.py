# Generated by Django 5.2 on 2025-05-07 12:35

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BusinessCertificateApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_of_entity', models.CharField(max_length=255)),
                ('address', models.TextField()),
                ('contact_number', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=254)),
                ('year_of_establishment', models.PositiveIntegerField()),
                ('type_of_business', models.CharField(choices=[('Water Processing Company', 'Water Processing Company'), ('Eatery/Restaurant', 'Eatery/Restaurant'), ('Food Processing Plants', 'Food Processing Plants'), ('Chemical Store', 'Chemical Store'), ('Vector Control Institution', 'Vector Control Institution'), ('Health Care Waste Handling Company', 'Health Care Waste Handling Company'), ('Occupational Health and Safety Institution', 'Occupational Health and Safety Institution'), ('Banks and other financial Institutions', 'Banks and other financial Institutions'), ('Health Care Institutions', 'Health Care Institutions'), ('Cinema/Video Club', 'Cinema/Video Club'), ('Factory/Concession Area', 'Factory/Concession Area'), ('Shop', 'Shop'), ('Store', 'Store'), ('Supermarket', 'Supermarket'), ('Hotel', 'Hotel'), ('Motel', 'Motel'), ('Guest House', 'Guest House'), ('University/College', 'University/College'), ('Cold Storage', 'Cold Storage'), ('Other', 'Other')], max_length=100)),
                ('other_business_type', models.CharField(blank=True, max_length=255, null=True)),
                ('name_of_business_owner', models.CharField(max_length=255)),
                ('address_of_business_owner', models.TextField()),
                ('contact_no_of_business_owner', models.CharField(max_length=50)),
                ('email_of_business_owner', models.EmailField(max_length=254)),
                ('name_of_staff_1', models.CharField(max_length=255)),
                ('nationality_of_staff_1', models.CharField(max_length=100)),
                ('position_of_staff_1', models.CharField(max_length=100)),
                ('education_experience_of_staff_1', models.TextField()),
                ('cv_of_staff_1', models.FileField(blank=True, null=True, upload_to='business_certificates/cvs/')),
                ('name_of_staff_2', models.CharField(max_length=255)),
                ('nationality_of_staff_2', models.CharField(max_length=100)),
                ('position_of_staff_2', models.CharField(max_length=100)),
                ('education_experience_of_staff_2', models.TextField()),
                ('cv_of_staff_2', models.FileField(blank=True, null=True, upload_to='business_certificates/cvs/')),
                ('accreditation_from_lmhra', models.FileField(blank=True, null=True, upload_to='business_certificates/docs/')),
                ('business_registration_document', models.FileField(upload_to='business_certificates/docs/')),
                ('article_of_incorporation', models.FileField(blank=True, null=True, upload_to='business_certificates/docs/')),
                ('tax_clearance', models.FileField(upload_to='business_certificates/docs/')),
                ('sanitation_waste_plan', models.FileField(blank=True, null=True, upload_to='business_certificates/docs/')),
                ('permit_from_micat', models.FileField(blank=True, null=True, upload_to='business_certificates/docs/')),
                ('attestation', models.BooleanField(default=False)),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('compliance_director_approved', models.BooleanField(default=False)),
                ('ed_approved', models.BooleanField(default=False)),
                ('ceo_approved', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='ClearanceApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ngo_name', models.CharField(max_length=255, verbose_name='Name of NGO/INGO/Local')),
                ('head_office_address', models.TextField()),
                ('sub_office_addresses', models.TextField()),
                ('year_established_in_liberia', models.DateField()),
                ('executive_director_name', models.CharField(max_length=255)),
                ('application_date', models.DateField()),
                ('telephone_number', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=254)),
                ('project1_name', models.CharField(blank=True, max_length=255)),
                ('project1_funding_source', models.CharField(blank=True, max_length=255)),
                ('project1_implementation_period', models.CharField(blank=True, max_length=100)),
                ('project1_status', models.CharField(blank=True, max_length=100)),
                ('project2_name', models.CharField(blank=True, max_length=255)),
                ('project2_funding_source', models.CharField(blank=True, max_length=255)),
                ('project2_implementation_period', models.CharField(blank=True, max_length=100)),
                ('project2_status', models.CharField(blank=True, max_length=100)),
                ('project3_name', models.CharField(blank=True, max_length=255)),
                ('project3_funding_source', models.CharField(blank=True, max_length=255)),
                ('project3_implementation_period', models.CharField(blank=True, max_length=100)),
                ('project3_status', models.CharField(blank=True, max_length=100)),
                ('project4_name', models.CharField(blank=True, max_length=255)),
                ('project4_funding_source', models.CharField(blank=True, max_length=255)),
                ('project4_implementation_period', models.CharField(blank=True, max_length=100)),
                ('project4_status', models.CharField(blank=True, max_length=100)),
                ('lessons_and_difficulties', models.TextField()),
                ('staff1_name', models.CharField(max_length=255)),
                ('staff1_nationality', models.CharField(max_length=100)),
                ('staff1_position', models.CharField(max_length=100)),
                ('staff1_education_experience', models.CharField(max_length=255)),
                ('staff1_cv', models.FileField(upload_to='clearance/cv/')),
                ('staff2_name', models.CharField(max_length=255)),
                ('staff2_nationality', models.CharField(max_length=100)),
                ('staff2_position', models.CharField(max_length=100)),
                ('staff2_education_experience', models.CharField(max_length=255)),
                ('staff2_cv', models.FileField(upload_to='clearance/cv/')),
                ('approved_wash_workplan', models.FileField(upload_to='clearance/supporting_docs/')),
                ('approved_me_report', models.FileField(upload_to='clearance/supporting_docs/')),
                ('water_quality_and_turnover_docs', models.FileField(upload_to='clearance/supporting_docs/')),
                ('light_vehicles', models.PositiveIntegerField()),
                ('pickups_4wd', models.PositiveIntegerField()),
                ('rig_compressor', models.PositiveIntegerField()),
                ('tripod', models.PositiveIntegerField()),
                ('culvert_mould', models.PositiveIntegerField()),
                ('size_0_90m', models.PositiveIntegerField()),
                ('size_0_76m', models.PositiveIntegerField()),
                ('chain_block', models.PositiveIntegerField()),
                ('pulley', models.PositiveIntegerField()),
                ('casting_yard', models.PositiveIntegerField()),
                ('additional_equipment', models.TextField()),
                ('attestation', models.BooleanField(default=False)),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('compliance_director_approved', models.BooleanField(default=False)),
                ('ed_approved', models.BooleanField(default=False)),
                ('ceo_approved', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='LicenseApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_name', models.CharField(max_length=255)),
                ('address', models.TextField()),
                ('contact', models.CharField(max_length=50)),
                ('email_address', models.EmailField(max_length=254)),
                ('sub_office_location_1', models.CharField(blank=True, max_length=255)),
                ('sub_office_location_2', models.CharField(blank=True, max_length=255)),
                ('sub_office_location_3', models.CharField(blank=True, max_length=255)),
                ('year_of_establishment', models.DateField()),
                ('business_registration_type', models.CharField(max_length=100)),
                ('owner_name', models.CharField(max_length=255)),
                ('owner_address', models.TextField()),
                ('owner_phone', models.CharField(max_length=50)),
                ('owner_email', models.EmailField(max_length=254)),
                ('water_production_site', models.CharField(max_length=100)),
                ('source_of_water', models.CharField(max_length=100)),
                ('type_of_water_production', models.CharField(max_length=100)),
                ('other_water_site', models.CharField(blank=True, max_length=255, null=True)),
                ('other_water_source', models.CharField(blank=True, max_length=255, null=True)),
                ('other_production_type', models.CharField(blank=True, max_length=255, null=True)),
                ('financial_capacity', models.CharField(max_length=100)),
                ('banks', models.TextField()),
                ('staff_name', models.CharField(max_length=255)),
                ('staff_nationality', models.CharField(max_length=100)),
                ('staff_position', models.CharField(max_length=100)),
                ('staff_education', models.CharField(max_length=100)),
                ('staff_experience_years', models.PositiveIntegerField()),
                ('staff_cv', models.FileField(upload_to='license/cv/')),
                ('staff_work_permit', models.FileField(upload_to='license/work_permits/')),
                ('environmental_license', models.FileField(blank=True, null=True, upload_to='license/supporting_docs/')),
                ('water_quality_report', models.FileField(blank=True, null=True, upload_to='license/supporting_docs/')),
                ('business_registration', models.FileField(blank=True, null=True, upload_to='license/supporting_docs/')),
                ('tax_clearance', models.FileField(blank=True, null=True, upload_to='license/supporting_docs/')),
                ('article_of_incorporation', models.FileField(blank=True, null=True, upload_to='license/supporting_docs/')),
                ('quality_analysis_report', models.FileField(blank=True, null=True, upload_to='license/supporting_docs/')),
                ('lwsc_receipts', models.FileField(blank=True, null=True, upload_to='license/supporting_docs/')),
                ('light_duty_vehicles', models.PositiveIntegerField()),
                ('heavy_duty_vehicles', models.PositiveIntegerField()),
                ('number_of_machines', models.PositiveIntegerField()),
                ('attestation', models.BooleanField(default=False)),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('is_approved_by_compliance', models.BooleanField(default=False)),
                ('compliance_approved_at', models.DateTimeField(blank=True, null=True)),
                ('is_approved_by_ed', models.BooleanField(default=False)),
                ('ed_approved_at', models.DateTimeField(blank=True, null=True)),
                ('is_approved_by_ceo', models.BooleanField(default=False)),
                ('ceo_approved_at', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Partner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organization_name', models.CharField(max_length=255)),
                ('contact_person', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(max_length=20)),
                ('address', models.TextField()),
                ('date_created', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='CertificateApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('certificate_type', models.CharField(max_length=255)),
                ('address', models.TextField()),
                ('last_certificate_expiry_date', models.DateField()),
                ('application_date', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Approved', 'Approved'), ('Rejected', 'Rejected')], default='Pending', max_length=20)),
                ('compliance_approved', models.BooleanField(default=False)),
                ('ed_approved', models.BooleanField(default=False)),
                ('ceo_approved', models.BooleanField(default=False)),
                ('year_of_establishment', models.DateField()),
                ('principal_name', models.CharField(max_length=255)),
                ('contact_number', models.CharField(max_length=20)),
                ('email_address', models.EmailField(max_length=254)),
                ('faith_based_school', models.CharField(blank=True, choices=[('University', 'University'), ('College', 'College'), ('Technical/Vocational', 'Technical/Vocational'), ('Secondary', 'Secondary'), ('Primary', 'Primary'), ('Early Childhood', 'Early Childhood')], max_length=50, null=True)),
                ('non_faith_based_school', models.CharField(blank=True, choices=[('University', 'University'), ('College', 'College'), ('Technical/Vocational', 'Technical/Vocational'), ('Secondary', 'Secondary'), ('Primary', 'Primary'), ('Early Childhood', 'Early Childhood')], max_length=50, null=True)),
                ('type_of_business_registration', models.CharField(choices=[('Sole Proprietorship', 'Sole Proprietorship'), ('Partnership', 'Partnership'), ('Corporation', 'Corporation')], max_length=50)),
                ('ownership', models.CharField(choices=[('government', 'Government'), ('private', 'Private'), ('non governmental', 'Non Governmental')], max_length=50)),
                ('financial_strength', models.CharField(blank=True, choices=[('strong', 'Strong'), ('medium', 'Medium'), ('little', 'Little')], max_length=20, null=True)),
                ('name_of_banks', models.CharField(blank=True, max_length=255, null=True)),
                ('admin_staff_1_name', models.CharField(max_length=255)),
                ('admin_staff_1_nationality', models.CharField(max_length=100)),
                ('admin_staff_1_position', models.CharField(max_length=100)),
                ('admin_staff_1_education', models.CharField(choices=[('High School Graduate', 'High School Graduate'), ('Undergraduate', 'Undergraduate'), ('Postgraduate', 'Postgraduate'), ('PhD', 'PhD')], max_length=50)),
                ('admin_staff_1_years_of_experience', models.IntegerField(default=0)),
                ('admin_staff_1_cv', models.FileField(blank=True, null=True, upload_to='certificates/admin_staff_1/cv/')),
                ('admin_staff_1_work_permit', models.FileField(blank=True, null=True, upload_to='certificates/admin_staff_1/work_permit/')),
                ('permit_from_moe', models.FileField(upload_to='certificates/documents/permit_from_moe/')),
                ('business_registration', models.FileField(blank=True, null=True, upload_to='certificates/documents/business_registration/')),
                ('article_of_incorporation', models.FileField(blank=True, null=True, upload_to='certificates/documents/article_of_incorporation/')),
                ('tax_clearance', models.FileField(upload_to='certificates/documents/tax_clearance/')),
                ('sanitation_policy', models.FileField(blank=True, null=True, upload_to='certificates/documents/sanitation_policy/')),
                ('accreditation_moe', models.FileField(blank=True, null=True, upload_to='certificates/documents/accreditation_moe/')),
                ('accreditation_lmhra', models.FileField(blank=True, null=True, upload_to='certificates/documents/accreditation_lmhra/')),
                ('number_of_handwashing_facilities', models.CharField(choices=[('one', 'One'), ('two', 'Two'), ('three', 'Three'), ('more than three', 'More than Three')], max_length=20)),
                ('number_of_gender_sensitive_latrines', models.CharField(choices=[('one', 'One'), ('two', 'Two'), ('three', 'Three'), ('more than three', 'More than Three')], max_length=20)),
                ('source_of_water', models.CharField(choices=[('hand-dug well', 'Hand-dug Well'), ('borehole', 'Borehole'), ('LWSC', 'LWSC'), ('creek', 'Creek'), ('other', 'Other')], max_length=50)),
                ('specify_other_source', models.CharField(blank=True, max_length=255, null=True)),
                ('number_of_drinking_water_facilities', models.CharField(choices=[('one', 'One'), ('two', 'Two'), ('three', 'Three'), ('more than three', 'More than Three')], max_length=20)),
                ('attestation', models.BooleanField(default=False)),
                ('date_approved', models.DateTimeField(blank=True, null=True)),
                ('generated_certificate', models.FileField(blank=True, null=True, upload_to='certificates/')),
                ('partner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='applications', to='certificates.partner')),
            ],
        ),
        migrations.CreateModel(
            name='Certificate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('certificate_type', models.CharField(max_length=255)),
                ('issued_date', models.DateField()),
                ('expiry_date', models.DateField()),
                ('application', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='certificates.certificateapplication')),
                ('partner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='certificates.partner')),
            ],
        ),
    ]
